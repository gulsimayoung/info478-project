page_four
)
# Final Deliverable UI
library(shiny)
library(plotly)
page_one <- tabPanel(
"Introduction"
)
page_two <- tabPanel(
"Health Expenditure",
h4("Health Expenditure by GDP Across Countries"),
sidebarLayout(
sidebarPanel(
h6("Choose two countries and a year below to compare their CHE%GDP."),
selectInput(
inputId = "country_1",
label = "Country 1:",
choices = c(unique_countries)
),
selectInput(
inputId = "country_2",
label = "Country 1:",
choices = c(unique_countries)
),
sliderInput(
inputId = "year",
label = "Start Year",
min = 2000,
max = 2018,
value = 2000
)
# h6("Drag the slider along to view the way that the CHE%GDP values change over time.")
),
mainPanel(
plotlyOutput("chart"),
br(),
h6("Chart description"),
br()
),
h4("Comparing current health expenditures per capita in USD"),
sidebarLayout(
sidebarPanel(
h6("Choose two countries and a year below to compare their health expenditures per capita."),
selectInput(
inputId = "country_3",
label = "Country 1:",
choices = c(unique_countries)
),
selectInput(
inputId = "country_4",
label = "Country 2:",
choices = c(unique_countries)
),
sliderInput(
inputId = "year",
label = "Year",
min = 2000,
max = 2018,
value = 2000
)
),
mainPanel(
plotlyOutput("chart2"),
br(),
h6("Chart description"),
br()
)
)
)
page_three <- tabPanel(
"Health Coverage"
)
page_four <- tabPanel(
"Resource Page"
)
ui <- navbarPage(theme = shinytheme("cyborg"),
"Health Insurance Coverage: A Global Analysis",
page_one,
page_two,
page_three,
page_four
)
# Final Deliverable UI
library(shiny)
library(plotly)
page_one <- tabPanel(
"Introduction"
)
page_two <- tabPanel(
"Health Expenditure",
h4("Health Expenditure by GDP Across Countries"),
sidebarLayout(
sidebarPanel(
h6("Choose two countries and a year below to compare their CHE%GDP."),
selectInput(
inputId = "country_1",
label = "Country 1:",
choices = c(unique_countries)
),
selectInput(
inputId = "country_2",
label = "Country 1:",
choices = c(unique_countries)
),
sliderInput(
inputId = "year",
label = "Start Year",
min = 2000,
max = 2018,
value = 2000
)
# h6("Drag the slider along to view the way that the CHE%GDP values change over time.")
)
),
mainPanel(
plotlyOutput("chart"),
br(),
h6("Chart description"),
br()
)
)
h4("Comparing current health expenditures per capita in USD")
sidebarLayout(
sidebarPanel(
h6("Choose two countries and a year below to compare their health expenditures per capita."),
selectInput(
inputId = "country_3",
label = "Country 1:",
choices = c(unique_countries)
),
selectInput(
inputId = "country_4",
label = "Country 2:",
choices = c(unique_countries)
),
sliderInput(
inputId = "year",
label = "Year",
min = 2000,
max = 2018,
value = 2000
)
),
mainPanel(
plotlyOutput("chart2"),
br(),
h6("Chart description"),
br()
)
)
)
page_three <- tabPanel(
"Health Coverage"
)
page_four <- tabPanel(
"Resource Page"
)
ui <- navbarPage(theme = shinytheme("cyborg"),
"Health Insurance Coverage: A Global Analysis",
page_one,
page_two,
page_three,
page_four
)
# Final Deliverable UI
library(shiny)
library(plotly)
page_one <- tabPanel(
"Introduction"
)
page_two <- tabPanel(
"Health Expenditure",
h4("Health Expenditure by GDP Across Countries"),
sidebarLayout(
sidebarPanel(
h6("Choose two countries and a year below to compare their CHE%GDP."),
selectInput(
inputId = "country_1",
label = "Country 1:",
choices = c(unique_countries)
),
selectInput(
inputId = "country_2",
label = "Country 1:",
choices = c(unique_countries)
),
sliderInput(
inputId = "year",
label = "Start Year",
min = 2000,
max = 2018,
value = 2000
)
# h6("Drag the slider along to view the way that the CHE%GDP values change over time.")
),
mainPanel(
plotlyOutput("chart"),
br(),
h6("Chart description"),
br()
)
)
h4("Comparing current health expenditures per capita in USD")
sidebarLayout(
sidebarPanel(
h6("Choose two countries and a year below to compare their health expenditures per capita."),
selectInput(
inputId = "country_3",
label = "Country 1:",
choices = c(unique_countries)
),
selectInput(
inputId = "country_4",
label = "Country 2:",
choices = c(unique_countries)
),
sliderInput(
inputId = "year",
label = "Year",
min = 2000,
max = 2018,
value = 2000
)
),
mainPanel(
plotlyOutput("chart2"),
br(),
h6("Chart description"),
br()
)
)
)
page_three <- tabPanel(
"Health Coverage"
)
page_four <- tabPanel(
"Resource Page"
)
ui <- navbarPage(theme = shinytheme("cyborg"),
"Health Insurance Coverage: A Global Analysis",
page_one,
page_two,
page_three,
page_four
)
# Final Deliverable UI
library(shiny)
library(plotly)
page_one <- tabPanel(
"Introduction"
)
page_two <- tabPanel(
"Health Expenditure",
sidebarLayout(
sidebarPanel(
h6("Choose two countries and a year below to compare their CHE%GDP."),
selectInput(
inputId = "country_1",
label = "Country 1:",
choices = c(unique_countries)
),
selectInput(
inputId = "country_2",
label = "Country 2:",
choices = c(unique_countries)
),
sliderInput(
inputId = "year",
label = "Year",
min = 2000,
max = 2018,
value = 2000
)
),
mainPanel(
plotlyOutput("chart"),
br(),
h6("Chart description"),
br()
)
),
# h4("Comparing current health expenditures per capita in USD")
sidebarLayout(
sidebarPanel(
h6("Choose two countries and a year below to compare their health expenditures per capita."),
selectInput(
inputId = "country_3",
label = "Country 1:",
choices = c(unique_countries)
),
selectInput(
inputId = "country_4",
label = "Country 2:",
choices = c(unique_countries)
),
sliderInput(
inputId = "year",
label = "Year",
min = 2000,
max = 2018,
value = 2000
)
),
mainPanel(
plotlyOutput("chart2"),
br(),
h6("Chart description"),
br()
)
)
)
page_three <- tabPanel(
"Health Coverage"
)
page_four <- tabPanel(
"Resource Page"
)
ui <- navbarPage(theme = shinytheme("cyborg"),
"Health Insurance Coverage: A Global Analysis",
page_one,
page_two,
page_three,
page_four
)
runApp()
View(GHED_data)
# Final deliverable server
unique_countries <- unique(GHED_data$country)
server <- function(input, output) {
output$chart <- renderPlotly({
country_data <- GHED_data %>%
filter(country == input$country_1 | country == input$country_2) %>%
filter(year == input$year)
GHED_data_che_gdp <- country_data %>%
summarize(country, year, che_gdp, .groups = "drop")
p <- ggplot(GHED_data_che_gdp) +
geom_bar(stat='identity', fill = "cornflowerblue",
mapping = aes(x = country, y = che_gdp)) +
labs(
title = "Comparing CHE%GDP Between Countries",
subtitle = "",
x = "Country",
y = "CHE%GDP"
)
ggplotly(p)
})
output$chart2 <- renderPlotly({
country_data <- GHED_data %>%
filter(country == input$country_3 | country == input$country_4) %>%
filter(year == input$year)
GHED_data_che_gdp <- country_data %>%
summarize(country, year, che_pc_usd, .groups = "drop")
p <- ggplot(GHED_data_che_gdp) +
geom_smooth(mapping = aes(x = year, y = che_pc_usd,
color = country)) +
geom_smooth(mapping = aes(x = year, y = che_pc_usd,
color = country))
labs(
title = "Comparing Health Expenditures per Capita Between Countries",
subtitle = "",
x = "Year",
y = "Health Expenditure per Capita in USD",
color = "Country"
)
ggplotly(p)
})
}
runApp()
runApp()
runApp()
# Final deliverable server
unique_countries <- unique(GHED_data$country)
server <- function(input, output) {
output$chart <- renderPlotly({
country_data <- GHED_data %>%
filter(country == input$country_1 | country == input$country_2) %>%
filter(year == input$year)
GHED_data_che_gdp <- country_data %>%
summarize(country, year, che_gdp, .groups = "drop")
p <- ggplot(GHED_data_che_gdp) +
geom_bar(stat='identity', fill = "cornflowerblue",
mapping = aes(x = country, y = che_gdp)) +
labs(
title = "Comparing CHE%GDP Between Countries",
subtitle = "",
x = "Country",
y = "CHE%GDP"
)
ggplotly(p)
})
output$chart2 <- renderPlotly({
country_data <- GHED_data %>%
filter(country == input$country_3) %>%
filter(year == input$year)
GHED_data_che_gdp <- country_data %>%
summarize(country, year, che_gdp, che_pc_usd, .groups = "drop")
p <- ggplot(GHED_data_che_gdp) +
scale_x_continuous(limits = c(input$year_2, 2018)) +
geom_smooth(mapping = aes(x = year, y = che_gdp,
color = "CHE%GDP")) +
geom_smooth(mapping = aes(x = year, y = che_pc_usd,
color = "Health Expenditures per Capita"))
labs(
title = "Comparing Health Expenditures per Capita to CHE%GDP",
subtitle = "",
x = "Year",
y = "Health Expenditure per Capita in USD",
color = "Country"
)
ggplotly(p)
})
}
runApp()
runApp()
# Final deliverable server
unique_countries <- unique(GHED_data$country)
server <- function(input, output) {
output$chart <- renderPlotly({
country_data <- GHED_data %>%
filter(country == input$country_1 | country == input$country_2) %>%
filter(year == input$year)
GHED_data_che_gdp <- country_data %>%
summarize(country, year, che_gdp, .groups = "drop")
p <- ggplot(GHED_data_che_gdp) +
geom_bar(stat='identity', fill = "cornflowerblue",
mapping = aes(x = country, y = che_gdp)) +
labs(
title = "Comparing CHE%GDP Between Countries",
subtitle = "",
x = "Country",
y = "CHE%GDP"
)
ggplotly(p)
})
output$chart2 <- renderPlotly({
country_data <- GHED_data %>%
filter(country == input$country_3) %>%
filter(year == input$year_2)
GHED_data_che_gdp <- country_data %>%
summarize(country, year, che_gdp, che_pc_usd, .groups = "drop")
p <- ggplot(GHED_data_che_gdp) +
scale_x_continuous(limits = c(input$year_2, 2018)) +
geom_smooth(mapping = aes(x = year, y = che_gdp,
color = "CHE%GDP")) +
geom_smooth(mapping = aes(x = year, y = che_pc_usd,
color = "Health Expenditures per Capita"))
labs(
title = "Comparing Health Expenditures per Capita to CHE%GDP",
subtitle = "",
x = "Year",
y = "Health Expenditure per Capita in USD",
color = "Country"
)
ggplotly(p)
})
}
View(GHED_data_che_gdp)
# Final deliverable server
unique_countries <- unique(GHED_data$country)
server <- function(input, output) {
output$chart <- renderPlotly({
country_data <- GHED_data %>%
filter(country == input$country_1 | country == input$country_2) %>%
filter(year == input$year)
GHED_data_che_gdp <- country_data %>%
summarize(country, year, che_gdp, .groups = "drop")
p <- ggplot(GHED_data_che_gdp) +
geom_bar(stat='identity', fill = "cornflowerblue",
mapping = aes(x = country, y = che_gdp)) +
labs(
title = "Comparing CHE%GDP Between Countries",
subtitle = "",
x = "Country",
y = "CHE%GDP"
)
ggplotly(p)
})
output$chart2 <- renderPlotly({
country_data <- GHED_data %>%
filter(country == input$country_3) %>%
filter(year == input$year_2)
GHED_data_che_gdp <- country_data %>%
summarize(country, year, che_gdp, che_pc_usd, .groups = "drop")
p <- ggplot(GHED_data_che_gdp) +
# scale_x_continuous(limits = c(input$year_2, 2018)) +
geom_smooth(mapping = aes(x = year, y = che_gdp,
color = "CHE%GDP")) +
geom_smooth(mapping = aes(x = year, y = che_pc_usd,
color = "Health Expenditures per Capita"))
labs(
title = "Comparing Health Expenditures per Capita to CHE%GDP",
subtitle = "",
x = "Year",
y = "Health Expenditure per Capita in USD",
color = "Country"
)
ggplotly(p)
})
}
runApp()
runApp()
runApp()
runApp()
View(GHED_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
